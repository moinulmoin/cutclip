---
description:
globs:
alwaysApply: true
---
# Coding Standards

## Structure
- Services: Singleton pattern with `@MainActor`
- Views: `@StateObject` for services, `@AppStorage` for settings
- Errors: Domain-specific enums with `toAppError()` conversion
- Models: Structs conforming to `Sendable`

## Best Practices
- NO sensitive data in logs (license keys, etc.)
- `ffmpeg` process `stderr` is used for accurate progress tracking.
- Cleanup temporary files after operations
- Graceful API degradation when offline
- Input validation before processing (time format: HH:MM:SS)

## API Patterns
```swift
func someApiCall() async throws -> SomeResponse {
    // ... setup ...
    return try await NetworkRetryHelper.retryOperation {
        let request = APIConfiguration.createRequest(url: url)
        let (data, response) = try await APIConfiguration.performSecureRequest(request)
        // ... handle response and errors ...
        return try JSONDecoder().decode(SomeResponse.self, from: data)
    }
}
```
